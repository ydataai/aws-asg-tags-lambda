name: Released



on:
  release:
    types:
    - released



env:
  DOCKERHUB_REGISTRY: ydata

  DOCKER_REPOSITORY: aws-asg-tags-lambda



jobs:
  cancel_previous:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-20.04
    timeout-minutes: 3

    steps:
      - uses: ydataai/cancel-workflow-action@0.7.0-fix
        with:
          ignore_sha: true
          access_token: ${{ github.token }}


  prepare:
    name: Prepare
    runs-on: ubuntu-20.04

    needs:
    - cancel_previous

    outputs:
      build_number: ${{ steps.short_sha.outputs.value }}
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::${GITHUB_REF#refs/*/}

    - uses: actions/checkout@v3

    - name: Git Short sha
      id: short_sha
      run: echo "::set-output name=value::$(git rev-parse --short HEAD)"


  docker-tag:
    name: Docker Tag and Push to public and private Container Registries
    runs-on: ubuntu-20.04

    needs:
    - prepare

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_ECR_REGION }}

    - name: Login to Amazon ECR
      id: ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Login to Dockerhub Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker tag and push
      env:
        SOURCE: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.build_number }}
        DESTINATION_ECR: ${{ steps.ecr.outputs.registry }}/${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare.outputs.version }}
        DESTINATION_DOCKERHUB: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare.outputs.version }}
      run: |
        docker pull $SOURCE
        docker tag $SOURCE $DESTINATION_ECR
        docker push $DESTINATION_ECR
        docker tag $SOURCE $DESTINATION_DOCKERHUB
        docker push $DESTINATION_DOCKERHUB


  update-manifests:
    name: Update AWS Marketplace
    runs-on: ubuntu-20.04

    needs:
    - prepare
    - docker-tag

    env:
      COMPONENT: ASG_TAGS_LAMBDA_VERSION

    steps:
    - name: Checkout AWS Marketplace repo
      uses: actions/checkout@v3
      with:
        repository: ydataai/aws-marketplace
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Update aws-marketplace
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: echo ${{ env.VERSION }} > ${{ env.COMPONENT }}

    - name: Commit and push image update into manifests repo
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        git config user.email "azory@ydata.ai"
        git config user.name "Azory YData Bot"
        git add ${{ env.COMPONENT }}
        git commit -a -m "chore(bump): [CI] [PROD] bump ${{ env.COMPONENT }} to $VERSION"
        git push origin master
